CREATE TABLE DB_CORE.SE_ACCOUNTS
(
  ACCOUNT_ID  NUMBER(9)                         NOT NULL,
  NAME        VARCHAR2(50 BYTE)                 NOT NULL,
  IS_ACTIVE   NUMBER(1)                         NOT NULL
);


CREATE TABLE DB_CORE.SE_EMAIL_TEMPLATES
(
  EMAIL_TEMPLATE_ID  NUMBER(9)                  NOT NULL,
  NAME               VARCHAR2(40 BYTE)          NOT NULL,
  TAGS               VARCHAR2(200 BYTE)         DEFAULT NULL,
  SUBJECT            VARCHAR2(78 BYTE)          NOT NULL,
  PLAIN_BODY         CLOB,
  HTML_BODY          CLOB
);


CREATE TABLE DB_CORE.SE_NOTIFICATIONS_TYPES
(
  NOTIFICATION_TYPE_ID  NUMBER(9)               NOT NULL,
  NAME                  VARCHAR2(30 BYTE)       NOT NULL,
  ICON                  VARCHAR2(100 BYTE)      NOT NULL,
  ICON_COLOR            VARCHAR2(20 BYTE)       DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_PERMISSIONS
(
  PERMISSION_ID    NUMBER(9)                    NOT NULL,
  NAME             VARCHAR2(40 BYTE)            NOT NULL,
  DETAIL           VARCHAR2(200 BYTE)           DEFAULT NULL,
  CATEGORY         VARCHAR2(20 BYTE)            DEFAULT NULL,
  USER_LEVEL       NUMBER(9)                    NOT NULL,
  IS_USER_DEFINED  NUMBER(1)                    NOT NULL,
  IS_ACTIVE        NUMBER(1)                    NOT NULL
);


CREATE TABLE DB_CORE.SE_PROPERTIES
(
  PROPERTY_ID  NUMBER(9)                        NOT NULL,
  NAME         VARCHAR2(40 BYTE)                NOT NULL,
  DETAIL       VARCHAR2(500 BYTE)               DEFAULT NULL,
  VALUE        VARCHAR2(4000 BYTE)              DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_REGISTRATIONS_STATES
(
  REGISTRATION_STATE_ID  NUMBER(9)              NOT NULL,
  NAME                   VARCHAR2(30 BYTE)      NOT NULL,
  DETAIL                 VARCHAR2(500 BYTE)     DEFAULT NULL,
  ICON                   VARCHAR2(100 BYTE)     DEFAULT NULL,
  ICON_COLOR             VARCHAR2(20 BYTE)      DEFAULT NULL,
  EXPIRATION_EXPRESSION  VARCHAR2(20 BYTE)      DEFAULT NULL,
  IS_FINAL               NUMBER(1)              NOT NULL
);


CREATE TABLE DB_CORE.SE_ROLES
(
  ROLE_ID    NUMBER(9)                          NOT NULL,
  NAME       VARCHAR2(40 BYTE)                  NOT NULL,
  DETAIL     VARCHAR2(200 BYTE)                 DEFAULT NULL,
  IS_ACTIVE  NUMBER(1)                          NOT NULL
);


CREATE TABLE DB_CORE.SE_ROLES_PERMISSIONS
(
  ROLE_PERMISSION_ID  NUMBER(9)                 NOT NULL,
  ROLE_ID             NUMBER(9)                 NOT NULL,
  PERMISSION_ID       NUMBER(9)                 NOT NULL,
  PERMISSION_LEVEL    NUMBER(9)                 NOT NULL
);


CREATE TABLE DB_CORE.SE_SECTORS
(
  SECTOR_ID    NUMBER(9)                        NOT NULL,
  NAME         VARCHAR2(40 BYTE)                NOT NULL,
  DETAIL       VARCHAR2(200 BYTE)               DEFAULT NULL,
  SECTOR_PREV  NUMBER(9)                        DEFAULT NULL,
  IS_ACTIVE    NUMBER(1)                        NOT NULL
);


CREATE TABLE DB_CORE.SE_SOFT_VERSIONS
(
  SOFT_VERSION_ID  NUMBER(9)                    NOT NULL,
  MAJOR            NUMBER(9)                    NOT NULL,
  MINOR            NUMBER(9)                    NOT NULL,
  PATCH            NUMBER(9)                    NOT NULL,
  FASE             VARCHAR2(20 BYTE)            NOT NULL,
  FIRST_STARTUP    TIMESTAMP(0)                 NOT NULL,
  DETAIL           VARCHAR2(2000 BYTE)          DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_USERS
(
  USER_ID                NUMBER(9)              NOT NULL,
  ACCOUNT_ID             NUMBER(9)              DEFAULT NULL,
  USERNAME               VARCHAR2(20 BYTE)      NOT NULL,
  LASTNAME               VARCHAR2(40 BYTE)      NOT NULL,
  FIRSTNAME              VARCHAR2(40 BYTE)      NOT NULL,
  EMAIL                  VARCHAR2(200 BYTE)     DEFAULT NULL,
  CELLPHONE              VARCHAR2(40 BYTE)      DEFAULT NULL,
  MAX_SESSIONS           NUMBER(9)              NOT NULL,
  IS_KILL_PREV_SESSION   NUMBER(1)              NOT NULL,
  MAX_INACTIVE_INTERVAL  NUMBER(9)              NOT NULL,
  USER_LEVEL             NUMBER(9)              NOT NULL,
  LAST_LOGIN             TIMESTAMP(0)           DEFAULT NULL,
  INCORRECT_ATTEMPTS     NUMBER(9)              NOT NULL,
  IS_LOCKED              NUMBER(1)              NOT NULL,
  IS_ACTIVE              NUMBER(1)              NOT NULL
);


CREATE TABLE DB_CORE.SE_WHITELIST
(
  WHITELIST_ID  NUMBER(9)                       NOT NULL,
  LASTNAME      VARCHAR2(40 BYTE)               NOT NULL,
  FIRSTNAME     VARCHAR2(40 BYTE)               NOT NULL,
  BIRTH_DATE    DATE                            DEFAULT NULL,
  GENDER        VARCHAR2(1 BYTE)                DEFAULT NULL,
  DOCUMENT_ID   VARCHAR2(20 BYTE)               DEFAULT NULL,
  EMAIL         VARCHAR2(200 BYTE)              NOT NULL,
  CELLPHONE     VARCHAR2(40 BYTE)               DEFAULT NULL
);


CREATE UNIQUE INDEX DB_CORE.SE_ACCOUNTS_PK ON DB_CORE.SE_ACCOUNTS
(ACCOUNT_ID);

CREATE UNIQUE INDEX DB_CORE.SE_EMAIL_TEMPLATES_PK ON DB_CORE.SE_EMAIL_TEMPLATES
(EMAIL_TEMPLATE_ID);

CREATE UNIQUE INDEX DB_CORE.SE_NOTIFICATIONS_TYPES_PK ON DB_CORE.SE_NOTIFICATIONS_TYPES
(NOTIFICATION_TYPE_ID);

CREATE UNIQUE INDEX DB_CORE.SE_PERMISSIONS_PK ON DB_CORE.SE_PERMISSIONS
(PERMISSION_ID);

CREATE UNIQUE INDEX DB_CORE.SE_PERMISSIONS_UQ01 ON DB_CORE.SE_PERMISSIONS
(CATEGORY, NAME);

CREATE UNIQUE INDEX DB_CORE.SE_PROPERTIES_PK ON DB_CORE.SE_PROPERTIES
(PROPERTY_ID);

CREATE UNIQUE INDEX DB_CORE.SE_PROPERTIES_UQ01 ON DB_CORE.SE_PROPERTIES
(NAME);

CREATE UNIQUE INDEX DB_CORE.SE_REGISTRATIONS_STATES_PK ON DB_CORE.SE_REGISTRATIONS_STATES
(REGISTRATION_STATE_ID);

CREATE INDEX DB_CORE.SE_ROLES_PERMISSIONS_IDX01 ON DB_CORE.SE_ROLES_PERMISSIONS
(ROLE_ID);

CREATE INDEX DB_CORE.SE_ROLES_PERMISSIONS_IDX02 ON DB_CORE.SE_ROLES_PERMISSIONS
(PERMISSION_ID);

CREATE UNIQUE INDEX DB_CORE.SE_ROLES_PERMISSIONS_PK ON DB_CORE.SE_ROLES_PERMISSIONS
(ROLE_PERMISSION_ID);

CREATE UNIQUE INDEX DB_CORE.SE_ROLES_PK ON DB_CORE.SE_ROLES
(ROLE_ID);

CREATE INDEX DB_CORE.SE_SECTORS_IDX01 ON DB_CORE.SE_SECTORS
(SECTOR_PREV);

CREATE UNIQUE INDEX DB_CORE.SE_SECTORS_PK ON DB_CORE.SE_SECTORS
(SECTOR_ID);

CREATE UNIQUE INDEX DB_CORE.SE_SOFT_VERSIONS_PK ON DB_CORE.SE_SOFT_VERSIONS
(SOFT_VERSION_ID);

CREATE INDEX DB_CORE.SE_USERS_IDX01 ON DB_CORE.SE_USERS
(ACCOUNT_ID);

CREATE UNIQUE INDEX DB_CORE.SE_USERS_PK ON DB_CORE.SE_USERS
(USER_ID);

CREATE UNIQUE INDEX DB_CORE.SE_USERS_UQ01 ON DB_CORE.SE_USERS
(USERNAME);

CREATE UNIQUE INDEX DB_CORE.SE_WHITELIST_PK ON DB_CORE.SE_WHITELIST
(WHITELIST_ID);

CREATE TABLE DB_CORE.SE_AUDIT
(
  AUDIT_ID         NUMBER(9)                    NOT NULL,
  USER_ID          NUMBER(9)                    NOT NULL,
  EVENT_DATE       TIMESTAMP(0)                 NOT NULL,
  AUDIT_DATE       TIMESTAMP(0)                 NOT NULL,
  EVENT_NAME       VARCHAR2(100 BYTE)           NOT NULL,
  ENTITY_NAME      VARCHAR2(100 BYTE)           DEFAULT NULL,
  ENTITY_ID        VARCHAR2(80 BYTE)            DEFAULT NULL,
  PARENT_ID        VARCHAR2(80 BYTE)            DEFAULT NULL,
  OLD_ENTITY       CLOB,
  NEW_ENTITY       CLOB,
  DETAIL           CLOB,
  CONTEXT          VARCHAR2(200 BYTE)           DEFAULT NULL,
  SESSION_ID       VARCHAR2(40 BYTE)            DEFAULT NULL,
  IP_ADDRESS       VARCHAR2(40 BYTE)            DEFAULT NULL,
  USERAGENT        VARCHAR2(400 BYTE)           DEFAULT NULL,
  SOFT_VERSION_ID  NUMBER(9)                    NOT NULL,
  SERVER_NAME      VARCHAR2(40 BYTE)            DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_ERRORS
(
  ERROR_ID         NUMBER(9)                    NOT NULL,
  USER_ID          NUMBER(9)                    DEFAULT NULL,
  ERROR_DATE       TIMESTAMP(0)                 NOT NULL,
  CONTEXT          VARCHAR2(200 BYTE)           NOT NULL,
  CONTEXT_DETAIL   VARCHAR2(2000 BYTE)          DEFAULT NULL,
  EX_CLASS         VARCHAR2(200 BYTE)           NOT NULL,
  EX_MESSAGE       VARCHAR2(2000 BYTE)          DEFAULT NULL,
  EX_STACK_TRACE   CLOB,
  SOFT_VERSION_ID  NUMBER(9)                    NOT NULL,
  SERVER_NAME      VARCHAR2(40 BYTE)            DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_NOTIFICATIONS
(
  NOTIFICATION_ID       NUMBER(9)               NOT NULL,
  NOTIFICATION_TYPE_ID  NUMBER(9)               NOT NULL,
  MESSAGE               VARCHAR2(4000 BYTE)     NOT NULL,
  NOTIFICATION_DATE     TIMESTAMP(0)            NOT NULL
);


CREATE TABLE DB_CORE.SE_NOTIFICATIONS_USERS
(
  NOTIFICATION_USER_ID  NUMBER(9)               NOT NULL,
  NOTIFICATION_ID       NUMBER(9)               NOT NULL,
  USER_ID               NUMBER(9)               NOT NULL,
  READED_DATE           TIMESTAMP(0)            DEFAULT NULL,
  DELETED_DATE          TIMESTAMP(0)            DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_PASSWORDS
(
  PASSWORD_ID  NUMBER(9)                        NOT NULL,
  USER_ID      NUMBER(9)                        NOT NULL,
  PASSWORD     VARCHAR2(200 BYTE)               NOT NULL,
  DATE_FROM    TIMESTAMP(0)                     NOT NULL,
  DATE_TO      TIMESTAMP(0)                     DEFAULT NULL,
  IS_TEMPORAL  NUMBER(1)                        NOT NULL
);


CREATE TABLE DB_CORE.SE_PASSWORDS_RECOVERY
(
  PASSWORD_RECOVERY_ID  NUMBER(9)               NOT NULL,
  USER_ID               NUMBER(9)               NOT NULL,
  REQUEST_DATE          TIMESTAMP(0)            NOT NULL,
  EXPIRATION_DATE       TIMESTAMP(0)            NOT NULL,
  PROCESS_DATE          TIMESTAMP(0)            DEFAULT NULL,
  VALIDATION_CODE       VARCHAR2(32 BYTE)       NOT NULL,
  IP_ADDRESS            VARCHAR2(40 BYTE)       DEFAULT NULL,
  USERAGENT             VARCHAR2(400 BYTE)      DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_ROLES_USERS
(
  ROLE_USER_ID  NUMBER(9)                       NOT NULL,
  ROLE_ID       NUMBER(9)                       NOT NULL,
  USER_ID       NUMBER(9)                       NOT NULL
);


CREATE TABLE DB_CORE.SE_SECTORS_USERS
(
  SECTOR_USER_ID  NUMBER(9)                     NOT NULL,
  SECTOR_ID       NUMBER(9)                     NOT NULL,
  USER_ID         NUMBER(9)                     NOT NULL
);


CREATE INDEX DB_CORE.SE_AUDIT_IDX01 ON DB_CORE.SE_AUDIT
(USER_ID);

CREATE INDEX DB_CORE.SE_AUDIT_IDX02 ON DB_CORE.SE_AUDIT
(SOFT_VERSION_ID);

CREATE UNIQUE INDEX DB_CORE.SE_AUDIT_PK ON DB_CORE.SE_AUDIT
(AUDIT_ID);

CREATE INDEX DB_CORE.SE_ERRORS_IDX01 ON DB_CORE.SE_ERRORS
(USER_ID);

CREATE INDEX DB_CORE.SE_ERRORS_IDX02 ON DB_CORE.SE_ERRORS
(SOFT_VERSION_ID);

CREATE UNIQUE INDEX DB_CORE.SE_ERRORS_PK ON DB_CORE.SE_ERRORS
(ERROR_ID);

CREATE INDEX DB_CORE.SE_NOTIFICATIONS_IDX01 ON DB_CORE.SE_NOTIFICATIONS
(NOTIFICATION_TYPE_ID);

CREATE UNIQUE INDEX DB_CORE.SE_NOTIFICATIONS_PK ON DB_CORE.SE_NOTIFICATIONS
(NOTIFICATION_ID);

CREATE INDEX DB_CORE.SE_NOTIFICATIONS_USERS_IDX01 ON DB_CORE.SE_NOTIFICATIONS_USERS
(NOTIFICATION_ID);

CREATE INDEX DB_CORE.SE_NOTIFICATIONS_USERS_IDX02 ON DB_CORE.SE_NOTIFICATIONS_USERS
(USER_ID);

CREATE UNIQUE INDEX DB_CORE.SE_NOTIFICATIONS_USERS_PK ON DB_CORE.SE_NOTIFICATIONS_USERS
(NOTIFICATION_USER_ID);

CREATE INDEX DB_CORE.SE_PASSWORDS_IDX01 ON DB_CORE.SE_PASSWORDS
(USER_ID);

CREATE UNIQUE INDEX DB_CORE.SE_PASSWORDS_PK ON DB_CORE.SE_PASSWORDS
(PASSWORD_ID);

CREATE INDEX DB_CORE.SE_PASSWORDS_RECOVERY_IDX01 ON DB_CORE.SE_PASSWORDS_RECOVERY
(USER_ID);

CREATE UNIQUE INDEX DB_CORE.SE_PASSWORDS_RECOVERY_PK ON DB_CORE.SE_PASSWORDS_RECOVERY
(PASSWORD_RECOVERY_ID);

CREATE UNIQUE INDEX DB_CORE.SE_PASSWORDS_RECOVERY_UQ01 ON DB_CORE.SE_PASSWORDS_RECOVERY
(VALIDATION_CODE);

CREATE INDEX DB_CORE.SE_ROLES_USERS_IDX01 ON DB_CORE.SE_ROLES_USERS
(ROLE_ID);

CREATE INDEX DB_CORE.SE_ROLES_USERS_IDX02 ON DB_CORE.SE_ROLES_USERS
(USER_ID);

CREATE UNIQUE INDEX DB_CORE.SE_ROLES_USERS_PK ON DB_CORE.SE_ROLES_USERS
(ROLE_USER_ID);

CREATE INDEX DB_CORE.SE_SECTORS_USERS_IDX01 ON DB_CORE.SE_SECTORS_USERS
(SECTOR_ID);

CREATE INDEX DB_CORE.SE_SECTORS_USERS_IDX02 ON DB_CORE.SE_SECTORS_USERS
(USER_ID);

CREATE UNIQUE INDEX DB_CORE.SE_SECTORS_USERS_PK ON DB_CORE.SE_SECTORS_USERS
(SECTOR_USER_ID);

CREATE TABLE DB_CORE.SE_REGISTRATIONS
(
  REGISTRATION_ID              NUMBER(9)        NOT NULL,
  USERNAME                     VARCHAR2(20 BYTE) DEFAULT NULL,
  LASTNAME                     VARCHAR2(40 BYTE) NOT NULL,
  FIRSTNAME                    VARCHAR2(40 BYTE) NOT NULL,
  BIRTH_DATE                   DATE             DEFAULT NULL,
  GENDER                       VARCHAR2(1 BYTE) DEFAULT NULL,
  DOCUMENT_ID                  VARCHAR2(20 BYTE) DEFAULT NULL,
  EMAIL                        VARCHAR2(200 BYTE) NOT NULL,
  CELLPHONE                    VARCHAR2(40 BYTE) DEFAULT NULL,
  VALIDATION_CODE              VARCHAR2(32 BYTE) NOT NULL,
  FIRST_REGISTRATION_EVENT_ID  NUMBER(9)        DEFAULT NULL,
  LAST_REGISTRATION_EVENT_ID   NUMBER(9)        DEFAULT NULL,
  USER_ID                      NUMBER(9)        DEFAULT NULL
);


CREATE TABLE DB_CORE.SE_REGISTRATIONS_EVENTS
(
  REGISTRATION_EVENT_ID       NUMBER(9)         NOT NULL,
  PREV_REGISTRATION_EVENT_ID  NUMBER(9)         DEFAULT NULL,
  REGISTRATION_ID             NUMBER(9)         NOT NULL,
  REGISTRATION_STATE_ID       NUMBER(9)         NOT NULL,
  EVENT_DATE                  TIMESTAMP(0)      NOT NULL,
  EXPIRATION_DATE             TIMESTAMP(0)      DEFAULT NULL,
  IP_ADDRESS                  VARCHAR2(40 BYTE) DEFAULT NULL,
  USERAGENT                   VARCHAR2(400 BYTE) DEFAULT NULL
);


CREATE UNIQUE INDEX DB_CORE.SE_REGISTRATIONS_EVENTS_PK ON DB_CORE.SE_REGISTRATIONS_EVENTS
(REGISTRATION_EVENT_ID);

CREATE UNIQUE INDEX DB_CORE.SE_REGISTRATIONS_PK ON DB_CORE.SE_REGISTRATIONS
(REGISTRATION_ID);

CREATE UNIQUE INDEX DB_CORE.SE_REGISTRATIONS_UQ01 ON DB_CORE.SE_REGISTRATIONS
(VALIDATION_CODE);

ALTER TABLE DB_CORE.SE_ACCOUNTS ADD (
  CONSTRAINT SE_ACCOUNTS_PK
  PRIMARY KEY
  (ACCOUNT_ID)
  USING INDEX DB_CORE.SE_ACCOUNTS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_EMAIL_TEMPLATES ADD (
  CONSTRAINT SE_EMAIL_TEMPLATES_PK
  PRIMARY KEY
  (EMAIL_TEMPLATE_ID)
  USING INDEX DB_CORE.SE_EMAIL_TEMPLATES_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_NOTIFICATIONS_TYPES ADD (
  CONSTRAINT SE_NOTIFICATIONS_TYPES_PK
  PRIMARY KEY
  (NOTIFICATION_TYPE_ID)
  USING INDEX DB_CORE.SE_NOTIFICATIONS_TYPES_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_PERMISSIONS ADD (
  CONSTRAINT SE_PERMISSIONS_PK
  PRIMARY KEY
  (PERMISSION_ID)
  USING INDEX DB_CORE.SE_PERMISSIONS_PK
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_PERMISSIONS ADD (
  CONSTRAINT SE_PERMISSIONS_UQ01
  UNIQUE (CATEGORY, NAME)
  USING INDEX DB_CORE.SE_PERMISSIONS_UQ01
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_PROPERTIES ADD (
  CONSTRAINT SE_PROPERTIES_PK
  PRIMARY KEY
  (PROPERTY_ID)
  USING INDEX DB_CORE.SE_PROPERTIES_PK
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_PROPERTIES ADD (
  CONSTRAINT SE_PROPERTIES_UQ01
  UNIQUE (NAME)
  USING INDEX DB_CORE.SE_PROPERTIES_UQ01
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_REGISTRATIONS_STATES ADD (
  CONSTRAINT SE_REGISTRATIONS_STATES_PK
  PRIMARY KEY
  (REGISTRATION_STATE_ID)
  USING INDEX DB_CORE.SE_REGISTRATIONS_STATES_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ROLES ADD (
  CONSTRAINT SE_ROLES_PK
  PRIMARY KEY
  (ROLE_ID)
  USING INDEX DB_CORE.SE_ROLES_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ROLES_PERMISSIONS ADD (
  CONSTRAINT SE_ROLES_PERMISSIONS_PK
  PRIMARY KEY
  (ROLE_PERMISSION_ID)
  USING INDEX DB_CORE.SE_ROLES_PERMISSIONS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_SECTORS ADD (
  CONSTRAINT SE_SECTORS_PK
  PRIMARY KEY
  (SECTOR_ID)
  USING INDEX DB_CORE.SE_SECTORS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_SOFT_VERSIONS ADD (
  CONSTRAINT SE_SOFT_VERSIONS_PK
  PRIMARY KEY
  (SOFT_VERSION_ID)
  USING INDEX DB_CORE.SE_SOFT_VERSIONS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_USERS ADD (
  CONSTRAINT SE_USERS_PK
  PRIMARY KEY
  (USER_ID)
  USING INDEX DB_CORE.SE_USERS_PK
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_USERS ADD (
  CONSTRAINT SE_USERS_UQ01
  UNIQUE (USERNAME)
  USING INDEX DB_CORE.SE_USERS_UQ01
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_WHITELIST ADD (
  CONSTRAINT SE_WHITELIST_PK
  PRIMARY KEY
  (WHITELIST_ID)
  USING INDEX DB_CORE.SE_WHITELIST_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_AUDIT ADD (
  CONSTRAINT SE_AUDIT_PK
  PRIMARY KEY
  (AUDIT_ID)
  USING INDEX DB_CORE.SE_AUDIT_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ERRORS ADD (
  CONSTRAINT SE_ERRORS_PK
  PRIMARY KEY
  (ERROR_ID)
  USING INDEX DB_CORE.SE_ERRORS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_NOTIFICATIONS ADD (
  CONSTRAINT SE_NOTIFICATIONS_PK
  PRIMARY KEY
  (NOTIFICATION_ID)
  USING INDEX DB_CORE.SE_NOTIFICATIONS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_NOTIFICATIONS_USERS ADD (
  CONSTRAINT SE_NOTIFICATIONS_USERS_PK
  PRIMARY KEY
  (NOTIFICATION_USER_ID)
  USING INDEX DB_CORE.SE_NOTIFICATIONS_USERS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_PASSWORDS ADD (
  CONSTRAINT SE_PASSWORDS_PK
  PRIMARY KEY
  (PASSWORD_ID)
  USING INDEX DB_CORE.SE_PASSWORDS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_PASSWORDS_RECOVERY ADD (
  CONSTRAINT SE_PASSWORDS_RECOVERY_PK
  PRIMARY KEY
  (PASSWORD_RECOVERY_ID)
  USING INDEX DB_CORE.SE_PASSWORDS_RECOVERY_PK
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_PASSWORDS_RECOVERY ADD (
  CONSTRAINT SE_PASSWORDS_RECOVERY_UQ01
  UNIQUE (VALIDATION_CODE)
  USING INDEX DB_CORE.SE_PASSWORDS_RECOVERY_UQ01
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ROLES_USERS ADD (
  CONSTRAINT SE_ROLES_USERS_PK
  PRIMARY KEY
  (ROLE_USER_ID)
  USING INDEX DB_CORE.SE_ROLES_USERS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_SECTORS_USERS ADD (
  CONSTRAINT SE_SECTORS_USERS_PK
  PRIMARY KEY
  (SECTOR_USER_ID)
  USING INDEX DB_CORE.SE_SECTORS_USERS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_REGISTRATIONS ADD (
  CONSTRAINT SE_REGISTRATIONS_PK
  PRIMARY KEY
  (REGISTRATION_ID)
  USING INDEX DB_CORE.SE_REGISTRATIONS_PK
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_REGISTRATIONS ADD (
  CONSTRAINT SE_REGISTRATIONS_UQ01
  UNIQUE (VALIDATION_CODE)
  USING INDEX DB_CORE.SE_REGISTRATIONS_UQ01
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_REGISTRATIONS_EVENTS ADD (
  CONSTRAINT SE_REGISTRATIONS_EVENTS_PK
  PRIMARY KEY
  (REGISTRATION_EVENT_ID)
  USING INDEX DB_CORE.SE_REGISTRATIONS_EVENTS_PK
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ROLES_PERMISSIONS ADD (
  CONSTRAINT SE_ROLES_PERMISSIONS_FK01 
  FOREIGN KEY (ROLE_ID) 
  REFERENCES DB_CORE.SE_ROLES (ROLE_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_ROLES_PERMISSIONS ADD (
  CONSTRAINT SE_ROLES_PERMISSIONS_FK02 
  FOREIGN KEY (PERMISSION_ID) 
  REFERENCES DB_CORE.SE_PERMISSIONS (PERMISSION_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_SECTORS ADD (
  CONSTRAINT SE_SECTORS_FK01 
  FOREIGN KEY (SECTOR_PREV) 
  REFERENCES DB_CORE.SE_SECTORS (SECTOR_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_USERS ADD (
  CONSTRAINT SE_USERS_FK01 
  FOREIGN KEY (ACCOUNT_ID) 
  REFERENCES DB_CORE.SE_ACCOUNTS (ACCOUNT_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_AUDIT ADD (
  CONSTRAINT SE_AUDIT_FK01 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_AUDIT ADD (
  CONSTRAINT SE_AUDIT_FK02 
  FOREIGN KEY (SOFT_VERSION_ID) 
  REFERENCES DB_CORE.SE_SOFT_VERSIONS (SOFT_VERSION_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ERRORS ADD (
  CONSTRAINT SE_ERRORS_FK01 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_ERRORS ADD (
  CONSTRAINT SE_ERRORS_FK02 
  FOREIGN KEY (SOFT_VERSION_ID) 
  REFERENCES DB_CORE.SE_SOFT_VERSIONS (SOFT_VERSION_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_NOTIFICATIONS ADD (
  CONSTRAINT SE_NOTIFICATIONS_FK01 
  FOREIGN KEY (NOTIFICATION_TYPE_ID) 
  REFERENCES DB_CORE.SE_NOTIFICATIONS_TYPES (NOTIFICATION_TYPE_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_NOTIFICATIONS_USERS ADD (
  CONSTRAINT SE_NOTIFICATIONS_USERS_FK01 
  FOREIGN KEY (NOTIFICATION_ID) 
  REFERENCES DB_CORE.SE_NOTIFICATIONS (NOTIFICATION_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_NOTIFICATIONS_USERS ADD (
  CONSTRAINT SE_NOTIFICATIONS_USERS_FK02 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_PASSWORDS ADD (
  CONSTRAINT SE_PASSWORDS_FK01 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_PASSWORDS_RECOVERY ADD (
  CONSTRAINT SE_PASSWORDS_RECOVERY_FK01 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_ROLES_USERS ADD (
  CONSTRAINT SE_ROLES_USERS_FK01 
  FOREIGN KEY (ROLE_ID) 
  REFERENCES DB_CORE.SE_ROLES (ROLE_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_ROLES_USERS ADD (
  CONSTRAINT SE_ROLES_USERS_FK02 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_SECTORS_USERS ADD (
  CONSTRAINT SE_SECTORS_USERS_FK01 
  FOREIGN KEY (SECTOR_ID) 
  REFERENCES DB_CORE.SE_SECTORS (SECTOR_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_SECTORS_USERS ADD (
  CONSTRAINT SE_SECTORS_USERS_FK02 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_REGISTRATIONS ADD (
  CONSTRAINT SE_REGISTRATIONS_FK01 
  FOREIGN KEY (FIRST_REGISTRATION_EVENT_ID) 
  REFERENCES DB_CORE.SE_REGISTRATIONS_EVENTS (REGISTRATION_EVENT_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_REGISTRATIONS ADD (
  CONSTRAINT SE_REGISTRATIONS_FK02 
  FOREIGN KEY (LAST_REGISTRATION_EVENT_ID) 
  REFERENCES DB_CORE.SE_REGISTRATIONS_EVENTS (REGISTRATION_EVENT_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_REGISTRATIONS ADD (
  CONSTRAINT SE_REGISTRATIONS_FK03 
  FOREIGN KEY (USER_ID) 
  REFERENCES DB_CORE.SE_USERS (USER_ID)
  ENABLE VALIDATE);


ALTER TABLE DB_CORE.SE_REGISTRATIONS_EVENTS ADD (
  CONSTRAINT SE_REGISTRATIONS_EVENTS_FK01 
  FOREIGN KEY (PREV_REGISTRATION_EVENT_ID) 
  REFERENCES DB_CORE.SE_REGISTRATIONS_EVENTS (REGISTRATION_EVENT_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_REGISTRATIONS_EVENTS ADD (
  CONSTRAINT SE_REGISTRATIONS_EVENTS_FK02 
  FOREIGN KEY (REGISTRATION_ID) 
  REFERENCES DB_CORE.SE_REGISTRATIONS (REGISTRATION_ID)
  ENABLE VALIDATE);

ALTER TABLE DB_CORE.SE_REGISTRATIONS_EVENTS ADD (
  CONSTRAINT SE_REGISTRATIONS_EVENTS_FK03 
  FOREIGN KEY (REGISTRATION_STATE_ID) 
  REFERENCES DB_CORE.SE_REGISTRATIONS_STATES (REGISTRATION_STATE_ID)
  ENABLE VALIDATE);
